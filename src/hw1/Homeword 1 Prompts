Personalized Hello World:
    Write code that prompts a user for their name and then displays
    “Hello, [name here]!” The flow should look like the following:

    What is your name? Rachel Min
    Hello, Rachel Min!

    If the user does not enter anything but presses Enter anyways, you should
    re-prompt for the user’s name.  This flow should look like the following
    (note that there should be a space after any ?  or :):

    What is your name?
    What is your name?
    What is your name? Rachel Min
    Hello, Rachel Min!

Binary & Linear Search
    In this problem, you will write binary and linear search.  For both functions
    you  are  to  return  the  index  of  the  specified  number,  or  -1  if  the
    number is not in the input list.  Also, even if you pass the tests, the TAs
    will  go  through  the  code  and  ensure  you  implemented  linear  search
    for linear search and binary search for binary search.

    For example, searching [0, 5, 10] for 10 should return 2.
    Searching [0, 5, 10] for 12 should return -1.

    (a)  In  repl.it  implement  the linearSearch() method. This  method should
     perform linear search on the given input list, and return an index, or -1 if
    the element doesn’t exist.
    (b)  In  repl.it  implement  the binarySearch() method. This  method should
    perform  binary  search  on  the  given  input  list,  and  return an index, or -1
    if the element doesn’t exist.

    inputArray - a passed in array of integers, not necessarily sorted
    sortedArray - a sorted array of integers
    searchTarget - the number you are searching for

Word Analysis
    In  this  problem,  we  will  implement  a  simple  dictionary  of common words in the English language,
    represented as an array of words paired with their lengths.  You will need to implement each of the below methods
    in the Dictionary class. In this problem, the first line of input represents the method to call.
    It will be one of the following: MIN, MAX, RANGE, AVERAGE, MODE. The second line  will  represent  an  integer n,
    which  denotes  the  number  of  words  in the list.  The following n lines will each be a word.
    The words will not necessarily be sorted.  Your output should be a single line representing the results of the method.
        (a)  Implement the minWordLength() method, which should return the length of the smallest word in the list.
        (b)  Implement a method called maxWordLength(), which should return the length of the largest word in the list.
        (c)  Implement  a  method  called wordLengthRange(),  which  should  return the range of lengths in the word list.
        (d)  Implement a method called averageWordLength(), which should return the average word length in the word list.  The method should return the average, accurate to exactly two decimal places (i.e.  if the average length is 5, return 5.00).
        (e)  Implement a method called mostCommonWordLength(), which should return the most common length of the words in the list.  If there is a tie, you should return -1.  You may assume that the length of a word is at most 100 and at least 1.